using UnityEngine;

public class Player : Character {
  private Camera mainCamera;

  protected override void Awake() {
    base.Awake();
    mainCamera = Camera.main;
  }

  protected void Update() {
    HandleInput();
  }

  private void HandleInput() {
    float horizontalInput = Input.GetAxis("Horizontal");
    float verticalInput = Input.GetAxis("Vertical");

    Vector3 movement = new Vector3(horizontalInput, 0f, verticalInput);
    body.MovePosition(body.position + movement * moveSpeed * Time.deltaTime);

    float speed = movement.magnitude;
    animator.SetFloat("Speed", speed);

    if (Input.GetKeyDown(KeyCode.Mouse0)) {
      Attack();
    }

    if (Input.GetKeyDown(KeyCode.Space)) {
      Jump();
    }

    if (Input.GetKeyDown(KeyCode.LeftShift)) {
      if (movement != Vector3.zero) {
        Dodge(movement);
      }
    }
  }

  public override void Attack() {
    Debug.Log("Player performs an attack!");
    animator.SetTrigger("Attack");
  }

  public void PlayerDealDamage(int damage) {
    Debug.Log("Player is dealing " + damage + " damage with a " add weaponType.");
    // - Spawn a hitbox
    // - Perform a SphereCast or OverlapSphere to find enemies
    // - Checking for a target and dealing damage directly
    // - Checking for weapon type and calculating
  }

  protected override void Die() {
    Debug.Log("Player has been defeated! Game Over.");
    //Implement game over logic here.
    base.Die(); // Call the base Die method to clean up
  }
}
